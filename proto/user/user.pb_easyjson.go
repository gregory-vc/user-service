// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  user

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func ( ID ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ID ) UnmarshalJSON([]byte) error { return nil }
func ( ID ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ID ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ID *ID

func ( ListUsersRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ListUsersRequest ) UnmarshalJSON([]byte) error { return nil }
func ( ListUsersRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ListUsersRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ListUsersRequest *ListUsersRequest

func ( ListUsersByIDsRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ListUsersByIDsRequest ) UnmarshalJSON([]byte) error { return nil }
func ( ListUsersByIDsRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ListUsersByIDsRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ListUsersByIDsRequest *ListUsersByIDsRequest

func ( ListUsersResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ListUsersResponse ) UnmarshalJSON([]byte) error { return nil }
func ( ListUsersResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ListUsersResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ListUsersResponse *ListUsersResponse

func ( AuthUserRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AuthUserRequest ) UnmarshalJSON([]byte) error { return nil }
func ( AuthUserRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AuthUserRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AuthUserRequest *AuthUserRequest

func ( AuthUserResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AuthUserResponse ) UnmarshalJSON([]byte) error { return nil }
func ( AuthUserResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AuthUserResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AuthUserResponse *AuthUserResponse

func ( Token ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Token ) UnmarshalJSON([]byte) error { return nil }
func ( Token ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Token ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Token *Token

func ( userServiceClient ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* userServiceClient ) UnmarshalJSON([]byte) error { return nil }
func ( userServiceClient ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* userServiceClient ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_userServiceClient *userServiceClient

func ( UserService ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UserService ) UnmarshalJSON([]byte) error { return nil }
func ( UserService ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UserService ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserService *UserService
